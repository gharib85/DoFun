(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     26422,        739]
NotebookOptionsPosition[     23216,        672]
NotebookOutlinePosition[     25640,        728]
CellTagsIndexPosition[     25597,        725]
WindowTitle->DSEPlotList
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["DO FUN PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[Cell[
    BoxData[
     ActionMenuBox[
      FrameBox[
       InterpretationBox[Cell[TextData[{
         "URL",
         StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
          StripOnInput->False]
        }]],
        TextCell[
         Row[{"URL", 
           Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
       StripOnInput->False], {"\<\"DoFun/ref/DSEPlotList\"\>":>
      None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell["DoFun/ref/DSEPlotList"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; Null], 
      Delimiter, "\<\"Copy web URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell[
             BoxData[
              MakeBoxes[
               Hyperlink[
               "http://reference.wolfram.com/language/DoFun/ref/DSEPlotList.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
           False]]; SelectionMove[
        DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; 
       Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
        NotebookLocate[{
          URL[
           StringJoin[
            If[
             TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$39262], 
             "http://reference.wolfram.com/system-modeler/", 
             "http://reference.wolfram.com/language/"], 
            "DoFun/ref/DSEPlotList", ".html"]], None}]}]},
      Appearance->None,
      MenuAppearance->Automatic,
      MenuStyle->"URLMenu"]],
     LineSpacing->{1.4, 0}]], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[TextData[{
 Cell["DSEPlotList", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"DSEPlotList", "[", 
       StyleBox["expr", "TI"], "]"}]], "InlineFormula"],
     "\[LineSeparator]returns a list of plots of each term in ",
     Cell[BoxData[
      StyleBox["expr", "TI"]], "InlineFormula"],
     "."
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"DSEPlotList", "[", 
       StyleBox[
        RowBox[{"expr", ",", " ", "fieldStyles"}], "TI"], "]"}]], 
      "InlineFormula"],
     " returns a list of plots of each term in ",
     Cell[BoxData[
      StyleBox["expr", "TI"]], "InlineFormula"],
     " with the styles of the fields given by ",
     Cell[BoxData[
      StyleBox["fieldStyles", "TI"]], "InlineFormula"],
     ". The syntax is ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox[
            StyleBox["field", "TI"], "1"], ",", " ", 
           SubscriptBox[
            StyleBox["style", "TI"], "1"]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox[
            StyleBox["field", "TI"], "2"], ",", " ", 
           SubscriptBox[
            StyleBox["style", "TI"], "2"]}], "}"}], ",", " ", "..."}], "}"}], 
       "}"}]], "InlineFormula"],
     " where ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["style", "TI"], "i"]], "InlineFormula"],
     " are graphics primitives like colors suitable for Line. ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlotList"]],"paclet:DoFun/ref/DSEPlotList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is the basic plotting function used by ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["COPlot"]],"paclet:DoFun/ref/COPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlot"]],"paclet:DoFun/ref/DSEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RGEPlot"]],"paclet:DoFun/ref/RGEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ".\nBy default, blobs denote dressed quantities (with the exception of \
internal propagators), dots bare n-point functions, boxes regulator \
insertions, triangles composite operators and external fields are indicated \
by a circle.\nAdditional possible options are options of ",
     ButtonBox["Graph",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Graph"],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {None, {None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["type",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFunDoDSERGE/ref/type"], "\[Placeholder]", 
    Cell["\<\
Internal use to distinguish between DSEs, RGEs and equations for composite \
operators.
\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["bareVertexSymbol",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/bareVertexSymbol"], 
    ButtonBox["diskTinySymbol",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/diskTinySymbol"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["bareVertexSymbol"]],"paclet:DoFun/ref/bareVertexSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option of ",
     Cell[BoxData["COPlot"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlot"]],"paclet:DoFun/ref/DSEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlotList"]],"paclet:DoFun/ref/DSEPlotList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RGEPlot"]],"paclet:DoFun/ref/RGEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". It determines how to draw bare vertices.\n\nPossible values: ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["boxSymbol"]],"paclet:DoFun/ref/boxSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskSymbol"]],"paclet:DoFun/ref/diskSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["triangleSymbol"]],"paclet:DoFun/ref/triangleSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskTinySymbol"]],"paclet:DoFun/ref/diskTinySymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskOpenSymbol"]],"paclet:DoFun/ref/diskOpenSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["crossSymbol"]],"paclet:DoFun/ref/crossSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or a user-defined function which takes the coordinate of the regulator \
insertion as input.\nDefault value: ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskTinySymbol"]],"paclet:DoFun/ref/diskTinySymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["coSymbol",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/coSymbol"], 
    ButtonBox["triangleSymbol",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/triangleSymbol"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["coSymbol"]],"paclet:DoFun/ref/coSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option of ",
     Cell[BoxData["COPlot"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlot"]],"paclet:DoFun/ref/DSEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlotList"]],"paclet:DoFun/ref/DSEPlotList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RGEPlot"]],"paclet:DoFun/ref/RGEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". It determines how to draw composite operators.\n\nPossible values: ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["boxSymbol"]],"paclet:DoFun/ref/boxSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskSymbol"]],"paclet:DoFun/ref/diskSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["triangleSymbol"]],"paclet:DoFun/ref/triangleSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskTinySymbol"]],"paclet:DoFun/ref/diskTinySymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskOpenSymbol"]],"paclet:DoFun/ref/diskOpenSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["crossSymbol"]],"paclet:DoFun/ref/crossSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or a user-defined function which takes the coordinate of the regulator \
insertion as input.\nDefault value: ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["triangleSymbol"]],"paclet:DoFun/ref/triangleSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["factorStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/factorStyle"], 
    RowBox[{"{", 
     RowBox[{"FontSize", " ", ":>", " ", "16"}], "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["factorStyle"]],"paclet:DoFun/ref/factorStyle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option of ",
     Cell[BoxData["COPlot"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlot"]],"paclet:DoFun/ref/DSEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlotList"]],"paclet:DoFun/ref/DSEPlotList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RGEPlot"]],"paclet:DoFun/ref/RGEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". It determines the style of all text except ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["indices"]],"paclet:DoFun/ref/indices"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and field labels.\nStandard value: {FontSize:>16}."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["indexStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/indexStyle"], 
    RowBox[{"{", 
     RowBox[{"FontSize", " ", ":>", " ", "14"}], "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["indexStyle"]],"paclet:DoFun/ref/indexStyle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["COPlot"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlot"]],"paclet:DoFun/ref/DSEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlotList"]],"paclet:DoFun/ref/DSEPlotList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RGEPlot"]],"paclet:DoFun/ref/RGEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". It determines the style of all ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["indices"]],"paclet:DoFun/ref/indices"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ".\nStandard value: {FontSize:>14}."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["output",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/output"], 
    ButtonBox["complete",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/complete"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["output"]],"paclet:DoFun/ref/output"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "  is an option of ",
     Cell[BoxData["COPlot"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlot"]],"paclet:DoFun/ref/DSEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlotList"]],"paclet:DoFun/ref/DSEPlotList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RGEPlot"]],"paclet:DoFun/ref/RGEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". It determines in what the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["output"]],"paclet:DoFun/ref/output"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is given.\n\nPossible values are:\n -) List: Gives a list of all \
graphs.\n -) ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["forceEquation"]],"paclet:DoFun/ref/forceEquation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ": Output in form of an equation, ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["even"]],"paclet:DoFun/ref/even"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " if a single graph is plotted.\n -) ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["complete"]],"paclet:DoFun/ref/complete"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " (default): Output for several graphs in form of an equation and for a \
single graph as such.\n "
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["regulatorSymbol",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/regulatorSymbol"], 
    ButtonBox["boxSymbol",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/boxSymbol"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["regulatorSymbol"]],"paclet:DoFun/ref/regulatorSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "  is an option of ",
     Cell[BoxData["COPlot"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlot"]],"paclet:DoFun/ref/DSEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlotList"]],"paclet:DoFun/ref/DSEPlotList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RGEPlot"]],"paclet:DoFun/ref/RGEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". It determines how to draw regulator insertions.\n\nPossible values: ",
     
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["boxSymbol"]],"paclet:DoFun/ref/boxSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskSymbol"]],"paclet:DoFun/ref/diskSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["triangleSymbol"]],"paclet:DoFun/ref/triangleSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskTinySymbol"]],"paclet:DoFun/ref/diskTinySymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskOpenSymbol"]],"paclet:DoFun/ref/diskOpenSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["crossSymbol"]],"paclet:DoFun/ref/crossSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or a user-defined function which takes the coordinate of the regulator \
insertion as input.\nDefault value: ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["boxSymbol"]],"paclet:DoFun/ref/boxSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["vertexSymbol",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/vertexSymbol"], 
    ButtonBox["diskSymbol",
     BaseStyle->"Link",
     ButtonData->"paclet:DoFun/ref/diskSymbol"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["vertexSymbol"]],"paclet:DoFun/ref/vertexSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option of ",
     Cell[BoxData["COPlot"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlot"]],"paclet:DoFun/ref/DSEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DSEPlotList"]],"paclet:DoFun/ref/DSEPlotList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RGEPlot"]],"paclet:DoFun/ref/RGEPlot"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". It determines how to draw dressed vertices.\n\nPossible values: ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["boxSymbol"]],"paclet:DoFun/ref/boxSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskSymbol"]],"paclet:DoFun/ref/diskSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["triangleSymbol"]],"paclet:DoFun/ref/triangleSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskTinySymbol"]],"paclet:DoFun/ref/diskTinySymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskOpenSymbol"]],"paclet:DoFun/ref/diskOpenSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["crossSymbol"]],"paclet:DoFun/ref/crossSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or a user-defined function which takes the coordinate of the regulator \
insertion as input.\nDefault value: ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["diskSymbol"]],"paclet:DoFun/ref/diskSymbol"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], "100", Cell["\<\
ImageSize is an option that specifies the overall size of an image to display \
for an object. \
\>", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{True, True, True, True, True, True, True, True, True, True}}}},
 CellID->1725773012]
}, Closed]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"DSEPlotList",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:DoFun/guide/DoFun", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2019, 8, 7, 9, 20, 58.440594}", 
    "history" -> {"XX", "", "", ""}, "context" -> "DoFun`DoDSERGE`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Do Fun Package Symbol", "language" -> "en", "paclet" -> "DoFun Package", 
    "status" -> "None", "summary" -> 
    "DSEPlotList[expr] returns a list of plots of each term in expr. \
DSEPlotList[expr, fieldStyles] returns a list of plots of each term in expr \
with the styles of the fields given by fieldStyles. The syntax is {{field1, \
style1}, {field2, style2}, ...}} where stylei are graphics primitives like \
colors suitable for Line. DSEPlotList is the basic plotting function used by \
COPlot, DSEPlot, RGEPlot. By default, blobs denote dressed quantities (with \
the exception of internal propagators), dots bare n-point functions, boxes \
regulator insertions, triangles composite operators and external fields are \
indicated by a circle. Additional possible options are options of Graph.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "DSEPlotList", 
    "titlemodifier" -> "", "windowtitle" -> "DSEPlotList", "type" -> "Symbol",
     "uri" -> "DoFun/ref/DSEPlotList"}},
CellContext->"Global`",
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.3 for Linux x86 (64-bit) (March 6, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[583, 21, 2282, 54, 70, "AnchorBarGrid",ExpressionUUID->"12fd113a-ddd2-47ff-ab75-e19c3f3b5bd2",
 CellID->1],
Cell[2868, 77, 168, 6, 70, "ObjectNameGrid",ExpressionUUID->"313def63-db51-4d0b-bc0b-493e7a3f6de9"],
Cell[3039, 85, 2818, 81, 70, "Usage",ExpressionUUID->"d637eeeb-1d85-4e33-8a97-02c47f6065c6"],
Cell[CellGroupData[{
Cell[5882, 170, 621, 19, 70, "NotesSection",ExpressionUUID->"fed8a963-2631-4df5-b285-1c4c930c02f4",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],
Cell[6506, 191, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"f4d710e1-4601-48cc-b08c-4ad7f8de1092"],
Cell[6540, 193, 53, 0, 70, "Notes",ExpressionUUID->"0e1d5bdf-3e60-4533-929e-2ff2ae05ed4e"],
Cell[6596, 195, 16578, 472, 70, "3ColumnTableMod",ExpressionUUID->"f354dd07-a1be-4c9f-a98d-e46bc563fb4b",
 CellID->1725773012]
}, Closed]],
Cell[23189, 670, 23, 0, 70, "FooterCell",ExpressionUUID->"ed8584a8-942c-404e-8e91-4af2a9b75b24"]
}
]
*)

(* End of internal cache information *)
