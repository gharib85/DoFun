(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
doFunInstaller::allowinternetuse="You have forbidden Mathematica to access the internet. Either allow Mathematica to access the internet or download DoFun from https://github.com/markusqh/DoFun/releases manually.";
If[Not["AllowInternetUse" /. SystemInformation["Network"]],
Message[doFunInstaller::allowinternetuse];
Abort[];
];

(* just for backwards compatibility *)
If[ToString[Context[URLDownload]]=!="System`",URLDownload=URLSave];


(* ::Input::Initialization:: *)
releaseInfo=Import["https://api.github.com/repos/markusqh/DoFun/releases/latest","JSON"];
doFunZipLocation=First["browser_download_url"/.("assets"/.releaseInfo)];
doFunInstallDir=FileNameJoin[{$UserBaseDirectory,"Applications"}];


(* ::Input::Initialization:: *)
doFunInstaller::zipdownloadfailed="Download from "<>doFunZipLocation<>" failed.";
doFunInstaller::installationfailed="\nInstallation failed. Please read the error messages for more information!";

Print["Downloading DoFun ..."];
doFunArchive=FileNameJoin[{$TemporaryDirectory,"DoFun.zip"}];
URLDownload[doFunZipLocation,doFunArchive];

tmpDoFunImport=Import[doFunArchive];
If[tmpDoFunImport==="{\"error\":\"Not Found\"}"||tmpDoFunImport==="404: Not Found",Message[doFunInstaller::zipdownloadfailed];Abort[];];

doFunFiles=FileNameJoin[{doFunInstallDir,#}]&/@Import[doFunArchive];
doFunFilesExist=FileExistsQ/@doFunFiles;
doFunExistingInstallation=Or@@doFunFilesExist;


(* ::Input::Initialization:: *)
deleteExisting=False;
deleteExisting=If[doFunExistingInstallation,
ChoiceDialog["The installer has found an existing DoFun installation.
Do you want to overwrite the existing installation version?
Otherwise the installation will be aborted.",
WindowTitle->"DoFun Installation",WindowSize->{Medium,All}],False];

If[deleteExisting,DeleteFile[Pick[doFunFiles,doFunFilesExist]]];

If[doFunExistingInstallation&&deleteExisting===False,
(*abort installation*)
Print["DoFun installation aborted."];,
(*install DoFun*)
installationSuccess=Check[
ExtractArchive[doFunArchive,doFunInstallDir];
<<"DoFun`";
,$Failed];
If[installationSuccess===$Failed,
(*installation failed*)
Message[doFunInstaller::installationfailed];,
(*installation successful*)
RebuildPacletData[];
Print["\nInstallation was successful. Happy computing!\nSearch for DoFun in the documentation center to get started!\n"];
];
];

Quiet[DeleteFile[doFunArchive]];
